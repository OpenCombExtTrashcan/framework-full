<?php
namespace jc\test\unit\testcase\jc\compile\object;


/**
 * Test class for AbstractObject.
 * Generated by PHPUnit on 2011-08-18 at 15:13:41.
 */
class AbstractObject extends \PHPUnit_Framework_TestCase
{
	const first_source_code = 'some contents' ;
	const first_source_code_len = 13 ;
	const first_position = 15 ;
	
    /**
     * @var jc\compile\object\AbstractObject
     */
    protected $aAbstractObject;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->aAbstractObject = new \jc\compile\object\AbstractObject(
        		self::first_source_code
        		, self::first_position
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @see self::testSourceCode()
     */
    public function test__toString()
    {
    	$this->testSourceCode() ;
    }

    /**
     * @todo Implement testSourceCode().
     */
    public function testSourceCode()
    {
		$this->assertEquals($this->aAbstractObject->sourceCode(),self::first_source_code) ;
		
		$this->aAbstractObject->setSourceCode("some other contents") ;
		$this->assertEquals($this->aAbstractObject->sourceCode(),"some other contents") ;
		$this->assertEquals((string)$this->aAbstractObject,"some other contents") ; // for AbstractObject::_toString()
    }

    /**
     * @see self::testSourceCode()
     */
    public function testSetSourceCode()
    {
    	$this->testSourceCode() ;
    }

    /**
     * @todo Implement testTargetCode().
     */
    public function testTargetCode()
    {
    	// same to AbstractObject::sourceCode() if not call setTargetCode()
		$this->assertEquals($this->aAbstractObject->targetCode(),self::first_source_code) ;
		
		$this->aAbstractObject->setTargetCode("some target code") ;
		$this->assertEquals($this->aAbstractObject->targetCode(),"some target code") ;
    }

    /**
     * @see self::testTargetCode()
     */
    public function testSetTargetCode()
    {
        $this->testTargetCode() ;
    }

    /**
     * @todo Implement testPosition().
     */
    public function testPosition()
    {
    	// same to AbstractObject::sourceCode() if not call setTargetCode()
		$this->assertEquals($this->aAbstractObject->position(),self::first_position) ;
		
		$this->aAbstractObject->setPosition(21) ;
		$this->assertEquals($this->aAbstractObject->position(),21) ;
		
		$this->aAbstractObject->setPosition(0) ;
		$this->assertEquals($this->aAbstractObject->position(),0) ;
    }

    /**
	 * @see self::testPosition()
     */
    public function testSetPosition()
    {
    	$this->testPosition() ;
    }

    /**
     * @todo Implement testLength().
     */
    public function testLength()
    {
		$this->assertEquals($this->aAbstractObject->length(),self::first_source_code_len) ;
		
		$this->aAbstractObject->setSourceCode("some other contents") ;
		$this->assertEquals($this->aAbstractObject->length(),19) ;
    }

    /**
     * @todo Implement testEndPosition().
     */
    public function testEndPosition()
    {
		$this->assertEquals(
				$this->aAbstractObject->endPosition()
				, self::first_position + self::first_source_code_len - 1
		) ;
		
		// after setSource()
		$this->aAbstractObject->setSourceCode("some other contents") ;
		$this->assertEquals(
				$this->aAbstractObject->endPosition()
				, self::first_position + 19 - 1
		) ;
		
		// after setPosition()
		$this->aAbstractObject->setPosition(21) ;
		$this->assertEquals(
				$this->aAbstractObject->endPosition()
				, 21 + 19 - 1
		) ;
    }
}
?>
